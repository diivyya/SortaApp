{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Divya\\\\React-flight-booking\\\\src\\\\container\\\\search-form\\\\search-form.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Card from 'react-bootstrap/Card';\nimport { Typeahead } from 'react-bootstrap-typeahead';\nimport { connect } from 'react-redux';\nimport './search-form.css';\nimport 'react-bootstrap-typeahead/css/Typeahead.css';\nimport { findFlights } from './../../actions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst airports = ['Pune (PNQ)', 'Delhi (DEL)', 'Bengaluru (BLR)', 'Mumbai (BOM)'];\n\nconst isDate = date => {\n  return new Date(date) !== \"Invalid Date\" && !isNaN(new Date(date));\n};\n\nconst ErrorLabel = props => {\n  return /*#__PURE__*/_jsxDEV(\"label\", {\n    style: {\n      color: 'red'\n    },\n    children: props.message\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 11\n  }, this);\n};\n\n_c = ErrorLabel;\nexport const SearchForm = props => {\n  _s();\n\n  let origin, destination;\n  const [isReturn, setFlightType] = useState(false);\n  const [status, setFormValid] = useState({\n    isValid: false\n  });\n  let invalidFields = {}; //const isReturn = true;\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    const {\n      flights\n    } = props;\n    invalidFields = {};\n    const criteria = {\n      origin: origin.state.text,\n      destination: destination.state.text,\n      departureDate: event.target.dateOfDep.value,\n      numOfPassengers: event.target.numOfPassengers.value\n    };\n\n    if (event.target.flightType[1].checked) {\n      criteria.returnDate = event.target.dateOfReturn.value;\n\n      if (!isDate(event.target.dateOfReturn.value)) {\n        invalidFields.returnDate = true;\n      }\n    }\n\n    if (!airports.includes(criteria.origin)) {\n      invalidFields.origin = true;\n    }\n\n    if (!airports.includes(criteria.destination) || criteria.origin === criteria.destination) {\n      invalidFields.destination = true;\n    }\n\n    if (!isDate(criteria.departureDate)) {\n      invalidFields.departureDate = true;\n    }\n\n    if (!isDate(criteria.departureDate)) {\n      invalidFields.departureDate = true;\n    }\n\n    if (Object.keys(invalidFields).length > 0) {\n      setFormValid({\n        isValid: false,\n        ...invalidFields\n      });\n      return;\n    }\n\n    setFormValid({\n      isValid: true\n    });\n    props.findFlights({\n      flights,\n      criteria\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    children: /*#__PURE__*/_jsxDEV(Card.Body, {\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        className: \"search-form-container\",\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n          children: [/*#__PURE__*/_jsxDEV(Form.Check, {\n            inline: true,\n            checked: !isReturn,\n            type: \"radio\",\n            label: \"One way\",\n            name: \"flightType\",\n            id: \"formHorizontalRadios1\",\n            onChange: e => setFlightType(false)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Form.Check, {\n            inline: true,\n            checked: isReturn,\n            type: \"radio\",\n            label: \"Return\",\n            name: \"flightType\",\n            id: \"formHorizontalRadios2\",\n            onChange: e => setFlightType(true)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"formGridOrigin\",\n          children: [/*#__PURE__*/_jsxDEV(Typeahead, {\n            labelKey: \"origin\",\n            options: airports,\n            placeholder: \"Enter Origin\",\n            ref: ref => origin = ref\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 11\n          }, this), status.origin && /*#__PURE__*/_jsxDEV(ErrorLabel, {\n            message: \"Please enter a valid airport\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"formGridDestination\",\n          children: [/*#__PURE__*/_jsxDEV(Typeahead, {\n            labelKey: \"destination\",\n            options: airports,\n            placeholder: \"Enter Destination\",\n            ref: ref => destination = ref\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 11\n          }, this), status.destination && /*#__PURE__*/_jsxDEV(ErrorLabel, {\n            message: \"Please enter a valid airport but not same as origin\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 34\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"formGridDateOfDep\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Departure Date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"date\",\n            name: \"dateOfDep\",\n            placeholder: \"yyyy-mm-dd\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 11\n          }, this), status.departureDate && /*#__PURE__*/_jsxDEV(ErrorLabel, {\n            message: \"Please enter a valid departure date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 36\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 9\n        }, this), isReturn && /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"formGridDateOfReturn\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Return Date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"date\",\n            name: \"dateOfReturn\",\n            placeholder: \"yyyy-mm-dd\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 11\n          }, this), status.returnDate && /*#__PURE__*/_jsxDEV(ErrorLabel, {\n            message: \"Please enter a valid return date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 22\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"exampleForm.ControlSelect1\",\n          children: /*#__PURE__*/_jsxDEV(Form.Control, {\n            as: \"select\",\n            name: \"numOfPassengers\",\n            placeholder: \"Number of Passengers\",\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              children: \"Number of Passengers\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              children: \"1\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              children: \"2\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 132,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              children: \"3\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 133,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              children: \"4\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 134,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              children: \"5\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"primary\",\n          type: \"submit\",\n          children: \"Search\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SearchForm, \"k4U2ecYkytOSFJhjyKbrk0dSGRU=\");\n\n_c2 = SearchForm;\n\nconst mapStateToProps = state => ({\n  flights: state.flights\n});\n\nconst mapDispatchToProps = {\n  findFlights\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(SearchForm);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ErrorLabel\");\n$RefreshReg$(_c2, \"SearchForm\");","map":{"version":3,"sources":["C:/Users/Divya/React-flight-booking/src/container/search-form/search-form.js"],"names":["React","useState","Form","Button","Card","Typeahead","connect","findFlights","airports","isDate","date","Date","isNaN","ErrorLabel","props","color","message","SearchForm","origin","destination","isReturn","setFlightType","status","setFormValid","isValid","invalidFields","handleSubmit","event","preventDefault","flights","criteria","state","text","departureDate","target","dateOfDep","value","numOfPassengers","flightType","checked","returnDate","dateOfReturn","includes","Object","keys","length","e","ref","mapStateToProps","mapDispatchToProps"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Card from 'react-bootstrap/Card';\r\nimport { Typeahead } from 'react-bootstrap-typeahead'; \r\nimport { connect } from 'react-redux';\r\nimport './search-form.css';\r\nimport 'react-bootstrap-typeahead/css/Typeahead.css';\r\nimport { findFlights } from './../../actions';\r\n\r\nconst airports = [\r\n  'Pune (PNQ)',\r\n  'Delhi (DEL)',\r\n  'Bengaluru (BLR)',\r\n  'Mumbai (BOM)'\r\n];\r\n\r\nconst isDate = (date) => {\r\n  return (new Date(date) !== \"Invalid Date\") && !isNaN(new Date(date));\r\n}\r\n\r\nconst ErrorLabel = (props) => {\r\n  return (<label style={{color: 'red'}}>{props.message}</label>)\r\n}\r\n\r\nexport const SearchForm = (props) => {\r\n  let origin, destination;\r\n  const [isReturn, setFlightType] = useState(false);\r\n  const [status, setFormValid] = useState({ isValid: false });\r\n  let invalidFields = {};\r\n  //const isReturn = true;\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    const {flights} = props;\r\n    invalidFields = {};\r\n    const criteria = {\r\n      origin: origin.state.text,\r\n      destination: destination.state.text,\r\n      departureDate: event.target.dateOfDep.value,\r\n      numOfPassengers: event.target.numOfPassengers.value\r\n    }\r\n\r\n    if (event.target.flightType[1].checked ) {\r\n      criteria.returnDate = event.target.dateOfReturn.value;\r\n      if (!isDate(event.target.dateOfReturn.value)) {\r\n        invalidFields.returnDate = true;\r\n      }\r\n    }\r\n\r\n    if (!airports.includes(criteria.origin)) {\r\n      invalidFields.origin = true;\r\n    }\r\n    if (!airports.includes(criteria.destination) || criteria.origin === criteria.destination) {\r\n      invalidFields.destination = true;\r\n    }\r\n    if(!isDate(criteria.departureDate)) {\r\n      invalidFields.departureDate = true;\r\n    }\r\n    if(!isDate(criteria.departureDate)) {\r\n      invalidFields.departureDate = true;\r\n    }\r\n    if(Object.keys(invalidFields).length > 0) {\r\n      setFormValid({isValid: false, ...invalidFields});\r\n      return;\r\n    }\r\n    \r\n    setFormValid({isValid: true});\r\n    props.findFlights({flights, criteria});\r\n  }\r\n\r\n  return (\r\n    <Card>\r\n      <Card.Body>\r\n      <Form className=\"search-form-container\" onSubmit={handleSubmit}>\r\n        <Form.Group >\r\n          <Form.Check\r\n            inline\r\n            checked={!isReturn}\r\n            type=\"radio\"\r\n            label=\"One way\"\r\n            name=\"flightType\"\r\n            id=\"formHorizontalRadios1\"\r\n            onChange={(e)=>setFlightType(false)}\r\n          />\r\n          <Form.Check\r\n            inline\r\n            checked={isReturn}\r\n            type=\"radio\"\r\n            label=\"Return\"\r\n            name=\"flightType\"\r\n            id=\"formHorizontalRadios2\"\r\n            onChange={(e)=>setFlightType(true)}\r\n          />\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId=\"formGridOrigin\">\r\n          <Typeahead\r\n            labelKey=\"origin\"\r\n            options={airports}\r\n            placeholder=\"Enter Origin\"\r\n            ref={(ref) => origin = ref}\r\n          />\r\n          {status.origin && <ErrorLabel message=\"Please enter a valid airport\"></ErrorLabel>}\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId=\"formGridDestination\">\r\n          <Typeahead\r\n            labelKey=\"destination\"\r\n            options={airports}\r\n            placeholder=\"Enter Destination\"\r\n            ref={(ref) => destination = ref}\r\n          />\r\n          {status.destination && <ErrorLabel message=\"Please enter a valid airport but not same as origin\"></ErrorLabel>}\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId=\"formGridDateOfDep\">\r\n          <Form.Label>Departure Date</Form.Label>\r\n          <Form.Control type=\"date\" name=\"dateOfDep\" placeholder=\"yyyy-mm-dd\" required />\r\n          {status.departureDate && <ErrorLabel message=\"Please enter a valid departure date\"></ErrorLabel>}\r\n        </Form.Group>\r\n\r\n        {isReturn && <Form.Group controlId=\"formGridDateOfReturn\">\r\n          <Form.Label>Return Date</Form.Label>\r\n          <Form.Control type=\"date\" name=\"dateOfReturn\"  placeholder=\"yyyy-mm-dd\" required />\r\n          {status.returnDate && <ErrorLabel message=\"Please enter a valid return date\"></ErrorLabel>}\r\n        </Form.Group>}\r\n\r\n        <Form.Group controlId=\"exampleForm.ControlSelect1\">\r\n          <Form.Control as=\"select\" name=\"numOfPassengers\" placeholder=\"Number of Passengers\">\r\n            <option>Number of Passengers</option>\r\n            <option>1</option>\r\n            <option>2</option>\r\n            <option>3</option>\r\n            <option>4</option>\r\n            <option>5</option>\r\n          </Form.Control>\r\n        </Form.Group>\r\n\r\n        <Button variant=\"primary\" type=\"submit\">\r\n          Search\r\n        </Button>\r\n        </Form> \r\n      </Card.Body>\r\n    </Card>\r\n     \r\n  )\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  flights: state.flights\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n  findFlights\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SearchForm);\r\n\r\n"]},"metadata":{},"sourceType":"module"}
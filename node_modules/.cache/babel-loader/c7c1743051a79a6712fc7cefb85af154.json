{"ast":null,"code":"import _objectSpread from \"D:\\\\SortaApp\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"D:\\\\SortaApp\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"D:\\\\SortaApp\\\\src\\\\container\\\\search-form\\\\search-form.js\";\nimport React, { useState } from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Card from 'react-bootstrap/Card';\nimport { Typeahead } from 'react-bootstrap-typeahead';\nimport { connect } from 'react-redux';\nimport './search-form.css';\nimport 'react-bootstrap-typeahead/css/Typeahead.css';\nimport { findFlights } from './../../actions';\nconst airports = ['Pune (PNQ)', 'Delhi (DEL)', 'Bengaluru (BLR)', 'Mumbai (BOM)'];\n\nconst isDate = date => {\n  return new Date(date) !== \"Invalid Date\" && !isNaN(new Date(date));\n};\n\nconst ErrorLabel = props => {\n  return React.createElement(\"label\", {\n    style: {\n      color: 'red'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, props.message);\n};\n\nexport const SearchForm = props => {\n  let origin, destination;\n\n  const _useState = useState(false),\n        _useState2 = _slicedToArray(_useState, 2),\n        isReturn = _useState2[0],\n        setFlightType = _useState2[1];\n\n  const _useState3 = useState({\n    isValid: false\n  }),\n        _useState4 = _slicedToArray(_useState3, 2),\n        status = _useState4[0],\n        setFormValid = _useState4[1];\n\n  let invalidFields = {}; //const isReturn = true;\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    const flights = props.flights;\n    invalidFields = {};\n    const criteria = {\n      origin: origin.state.text,\n      destination: destination.state.text,\n      departureDate: event.target.dateOfDep.value,\n      numOfPassengers: event.target.numOfPassengers.value\n    };\n\n    if (event.target.flightType[1].checked) {\n      criteria.returnDate = event.target.dateOfReturn.value;\n\n      if (!isDate(event.target.dateOfReturn.value)) {\n        invalidFields.returnDate = true;\n      }\n    }\n\n    if (!airports.includes(criteria.origin)) {\n      invalidFields.origin = true;\n    }\n\n    if (!airports.includes(criteria.destination) || criteria.origin === criteria.destination) {\n      invalidFields.destination = true;\n    }\n\n    if (!isDate(criteria.departureDate)) {\n      invalidFields.departureDate = true;\n    }\n\n    if (!isDate(criteria.departureDate)) {\n      invalidFields.departureDate = true;\n    }\n\n    if (Object.keys(invalidFields).length > 0) {\n      setFormValid(_objectSpread({\n        isValid: false\n      }, invalidFields));\n      return;\n    }\n\n    setFormValid({\n      isValid: true\n    });\n    props.findFlights({\n      flights,\n      criteria\n    });\n  };\n\n  return React.createElement(Card, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, React.createElement(Card.Body, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, React.createElement(Form, {\n    className: \"search-form-container\",\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, React.createElement(Form.Group, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, React.createElement(Form.Check, {\n    inline: true,\n    checked: !isReturn,\n    type: \"button\",\n    label: \"One way\",\n    name: \"flightType\",\n    id: \"formHorizontalRadios1\",\n    onChange: e => setFlightType(false),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }), React.createElement(Form.Check, {\n    inline: true,\n    checked: isReturn,\n    type: \"button\",\n    label: \"Return\",\n    name: \"flightType\",\n    id: \"formHorizontalRadios2\",\n    onChange: e => setFlightType(true),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  })), React.createElement(Form.Group, {\n    controlId: \"formGridOrigin\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }, React.createElement(Typeahead, {\n    labelKey: \"origin\",\n    options: airports,\n    placeholder: \"Enter Origin\",\n    ref: ref => origin = ref,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }), status.origin && React.createElement(ErrorLabel, {\n    message: \"Please enter a valid airport\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  })), React.createElement(Form.Group, {\n    controlId: \"formGridDestination\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }, React.createElement(Typeahead, {\n    labelKey: \"destination\",\n    options: airports,\n    placeholder: \"Enter Destination\",\n    ref: ref => destination = ref,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  }), status.destination && React.createElement(ErrorLabel, {\n    message: \"Please enter a valid airport but not same as origin\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  })), React.createElement(Form.Group, {\n    controlId: \"formGridDateOfDep\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116\n    },\n    __self: this\n  }, React.createElement(Form.Label, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117\n    },\n    __self: this\n  }, \"Departure Date\"), React.createElement(Form.Control, {\n    type: \"date\",\n    name: \"dateOfDep\",\n    placeholder: \"yyyy-mm-dd\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118\n    },\n    __self: this\n  }), status.departureDate && React.createElement(ErrorLabel, {\n    message: \"Please enter a valid departure date\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119\n    },\n    __self: this\n  })), isReturn && React.createElement(Form.Group, {\n    controlId: \"formGridDateOfReturn\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122\n    },\n    __self: this\n  }, React.createElement(Form.Label, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123\n    },\n    __self: this\n  }, \"Return Date\"), React.createElement(Form.Control, {\n    type: \"date\",\n    name: \"dateOfReturn\",\n    placeholder: \"yyyy-mm-dd\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124\n    },\n    __self: this\n  }), status.returnDate && React.createElement(ErrorLabel, {\n    message: \"Please enter a valid return date\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125\n    },\n    __self: this\n  })), React.createElement(Form.Group, {\n    controlId: \"exampleForm.ControlSelect1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128\n    },\n    __self: this\n  }, React.createElement(Form.Control, {\n    as: \"select\",\n    name: \"numOfPassengers\",\n    placeholder: \"Number of Passengers\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129\n    },\n    __self: this\n  }, React.createElement(\"option\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130\n    },\n    __self: this\n  }, \"Number of Passengers\"), React.createElement(\"option\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131\n    },\n    __self: this\n  }, \"1\"), React.createElement(\"option\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132\n    },\n    __self: this\n  }, \"2\"), React.createElement(\"option\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133\n    },\n    __self: this\n  }, \"3\"), React.createElement(\"option\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134\n    },\n    __self: this\n  }, \"4\"), React.createElement(\"option\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135\n    },\n    __self: this\n  }, \"5\"))), React.createElement(Button, {\n    variant: \"primary\",\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139\n    },\n    __self: this\n  }, \"Search\"))));\n};\n\nconst mapStateToProps = state => ({\n  flights: state.flights\n});\n\nconst mapDispatchToProps = {\n  findFlights\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(SearchForm);","map":{"version":3,"sources":["D:\\SortaApp\\src\\container\\search-form\\search-form.js"],"names":["React","useState","Form","Button","Card","Typeahead","connect","findFlights","airports","isDate","date","Date","isNaN","ErrorLabel","props","color","message","SearchForm","origin","destination","isReturn","setFlightType","isValid","status","setFormValid","invalidFields","handleSubmit","event","preventDefault","flights","criteria","state","text","departureDate","target","dateOfDep","value","numOfPassengers","flightType","checked","returnDate","dateOfReturn","includes","Object","keys","length","e","ref","mapStateToProps","mapDispatchToProps"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,IAAP,MAAiB,sBAAjB;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,OAAOC,IAAP,MAAiB,sBAAjB;AACA,SAASC,SAAT,QAA0B,2BAA1B;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAO,mBAAP;AACA,OAAO,6CAAP;AACA,SAASC,WAAT,QAA4B,iBAA5B;AAEA,MAAMC,QAAQ,GAAG,CACf,YADe,EAEf,aAFe,EAGf,iBAHe,EAIf,cAJe,CAAjB;;AAOA,MAAMC,MAAM,GAAIC,IAAD,IAAU;AACvB,SAAQ,IAAIC,IAAJ,CAASD,IAAT,MAAmB,cAApB,IAAuC,CAACE,KAAK,CAAC,IAAID,IAAJ,CAASD,IAAT,CAAD,CAApD;AACD,CAFD;;AAIA,MAAMG,UAAU,GAAIC,KAAD,IAAW;AAC5B,SAAQ;AAAO,IAAA,KAAK,EAAE;AAACC,MAAAA,KAAK,EAAE;AAAR,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA+BD,KAAK,CAACE,OAArC,CAAR;AACD,CAFD;;AAIA,OAAO,MAAMC,UAAU,GAAIH,KAAD,IAAW;AACnC,MAAII,MAAJ,EAAYC,WAAZ;;AADmC,oBAEDlB,QAAQ,CAAC,KAAD,CAFP;AAAA;AAAA,QAE5BmB,QAF4B;AAAA,QAElBC,aAFkB;;AAAA,qBAGJpB,QAAQ,CAAC;AAAEqB,IAAAA,OAAO,EAAE;AAAX,GAAD,CAHJ;AAAA;AAAA,QAG5BC,MAH4B;AAAA,QAGpBC,YAHoB;;AAInC,MAAIC,aAAa,GAAG,EAApB,CAJmC,CAKnC;;AACA,QAAMC,YAAY,GAAIC,KAAD,IAAW;AAC9BA,IAAAA,KAAK,CAACC,cAAN;AAD8B,UAEvBC,OAFuB,GAEZf,KAFY,CAEvBe,OAFuB;AAG9BJ,IAAAA,aAAa,GAAG,EAAhB;AACA,UAAMK,QAAQ,GAAG;AACfZ,MAAAA,MAAM,EAAEA,MAAM,CAACa,KAAP,CAAaC,IADN;AAEfb,MAAAA,WAAW,EAAEA,WAAW,CAACY,KAAZ,CAAkBC,IAFhB;AAGfC,MAAAA,aAAa,EAAEN,KAAK,CAACO,MAAN,CAAaC,SAAb,CAAuBC,KAHvB;AAIfC,MAAAA,eAAe,EAAEV,KAAK,CAACO,MAAN,CAAaG,eAAb,CAA6BD;AAJ/B,KAAjB;;AAOA,QAAIT,KAAK,CAACO,MAAN,CAAaI,UAAb,CAAwB,CAAxB,EAA2BC,OAA/B,EAAyC;AACvCT,MAAAA,QAAQ,CAACU,UAAT,GAAsBb,KAAK,CAACO,MAAN,CAAaO,YAAb,CAA0BL,KAAhD;;AACA,UAAI,CAAC3B,MAAM,CAACkB,KAAK,CAACO,MAAN,CAAaO,YAAb,CAA0BL,KAA3B,CAAX,EAA8C;AAC5CX,QAAAA,aAAa,CAACe,UAAd,GAA2B,IAA3B;AACD;AACF;;AAED,QAAI,CAAChC,QAAQ,CAACkC,QAAT,CAAkBZ,QAAQ,CAACZ,MAA3B,CAAL,EAAyC;AACvCO,MAAAA,aAAa,CAACP,MAAd,GAAuB,IAAvB;AACD;;AACD,QAAI,CAACV,QAAQ,CAACkC,QAAT,CAAkBZ,QAAQ,CAACX,WAA3B,CAAD,IAA4CW,QAAQ,CAACZ,MAAT,KAAoBY,QAAQ,CAACX,WAA7E,EAA0F;AACxFM,MAAAA,aAAa,CAACN,WAAd,GAA4B,IAA5B;AACD;;AACD,QAAG,CAACV,MAAM,CAACqB,QAAQ,CAACG,aAAV,CAAV,EAAoC;AAClCR,MAAAA,aAAa,CAACQ,aAAd,GAA8B,IAA9B;AACD;;AACD,QAAG,CAACxB,MAAM,CAACqB,QAAQ,CAACG,aAAV,CAAV,EAAoC;AAClCR,MAAAA,aAAa,CAACQ,aAAd,GAA8B,IAA9B;AACD;;AACD,QAAGU,MAAM,CAACC,IAAP,CAAYnB,aAAZ,EAA2BoB,MAA3B,GAAoC,CAAvC,EAA0C;AACxCrB,MAAAA,YAAY;AAAEF,QAAAA,OAAO,EAAE;AAAX,SAAqBG,aAArB,EAAZ;AACA;AACD;;AAEDD,IAAAA,YAAY,CAAC;AAACF,MAAAA,OAAO,EAAE;AAAV,KAAD,CAAZ;AACAR,IAAAA,KAAK,CAACP,WAAN,CAAkB;AAACsB,MAAAA,OAAD;AAAUC,MAAAA;AAAV,KAAlB;AACD,GArCD;;AAuCA,SACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA,oBAAC,IAAD;AAAM,IAAA,SAAS,EAAC,uBAAhB;AAAwC,IAAA,QAAQ,EAAEJ,YAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD,CAAM,KAAN;AACE,IAAA,MAAM,MADR;AAEE,IAAA,OAAO,EAAE,CAACN,QAFZ;AAGE,IAAA,IAAI,EAAC,QAHP;AAIE,IAAA,KAAK,EAAC,SAJR;AAKE,IAAA,IAAI,EAAC,YALP;AAME,IAAA,EAAE,EAAC,uBANL;AAOE,IAAA,QAAQ,EAAG0B,CAAD,IAAKzB,aAAa,CAAC,KAAD,CAP9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAUE,oBAAC,IAAD,CAAM,KAAN;AACE,IAAA,MAAM,MADR;AAEE,IAAA,OAAO,EAAED,QAFX;AAGE,IAAA,IAAI,EAAC,QAHP;AAIE,IAAA,KAAK,EAAC,QAJR;AAKE,IAAA,IAAI,EAAC,YALP;AAME,IAAA,EAAE,EAAC,uBANL;AAOE,IAAA,QAAQ,EAAG0B,CAAD,IAAKzB,aAAa,CAAC,IAAD,CAP9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAVF,CADF,EAsBE,oBAAC,IAAD,CAAM,KAAN;AAAY,IAAA,SAAS,EAAC,gBAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,SAAD;AACE,IAAA,QAAQ,EAAC,QADX;AAEE,IAAA,OAAO,EAAEb,QAFX;AAGE,IAAA,WAAW,EAAC,cAHd;AAIE,IAAA,GAAG,EAAGuC,GAAD,IAAS7B,MAAM,GAAG6B,GAJzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAOGxB,MAAM,CAACL,MAAP,IAAiB,oBAAC,UAAD;AAAY,IAAA,OAAO,EAAC,8BAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPpB,CAtBF,EAgCE,oBAAC,IAAD,CAAM,KAAN;AAAY,IAAA,SAAS,EAAC,qBAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,SAAD;AACE,IAAA,QAAQ,EAAC,aADX;AAEE,IAAA,OAAO,EAAEV,QAFX;AAGE,IAAA,WAAW,EAAC,mBAHd;AAIE,IAAA,GAAG,EAAGuC,GAAD,IAAS5B,WAAW,GAAG4B,GAJ9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAOGxB,MAAM,CAACJ,WAAP,IAAsB,oBAAC,UAAD;AAAY,IAAA,OAAO,EAAC,qDAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPzB,CAhCF,EA0CE,oBAAC,IAAD,CAAM,KAAN;AAAY,IAAA,SAAS,EAAC,mBAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,EAEE,oBAAC,IAAD,CAAM,OAAN;AAAc,IAAA,IAAI,EAAC,MAAnB;AAA0B,IAAA,IAAI,EAAC,WAA/B;AAA2C,IAAA,WAAW,EAAC,YAAvD;AAAoE,IAAA,QAAQ,MAA5E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAGGI,MAAM,CAACU,aAAP,IAAwB,oBAAC,UAAD;AAAY,IAAA,OAAO,EAAC,qCAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAH3B,CA1CF,EAgDGb,QAAQ,IAAI,oBAAC,IAAD,CAAM,KAAN;AAAY,IAAA,SAAS,EAAC,sBAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACX,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADW,EAEX,oBAAC,IAAD,CAAM,OAAN;AAAc,IAAA,IAAI,EAAC,MAAnB;AAA0B,IAAA,IAAI,EAAC,cAA/B;AAA+C,IAAA,WAAW,EAAC,YAA3D;AAAwE,IAAA,QAAQ,MAAhF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFW,EAGVG,MAAM,CAACiB,UAAP,IAAqB,oBAAC,UAAD;AAAY,IAAA,OAAO,EAAC,kCAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHX,CAhDf,EAsDE,oBAAC,IAAD,CAAM,KAAN;AAAY,IAAA,SAAS,EAAC,4BAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD,CAAM,OAAN;AAAc,IAAA,EAAE,EAAC,QAAjB;AAA0B,IAAA,IAAI,EAAC,iBAA/B;AAAiD,IAAA,WAAW,EAAC,sBAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAHF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAJF,EAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SALF,EAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SANF,CADF,CAtDF,EAiEE,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAC,SAAhB;AAA0B,IAAA,IAAI,EAAC,QAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAjEF,CADA,CADF,CADF;AA4ED,CAzHM;;AA2HP,MAAMQ,eAAe,GAAIjB,KAAD,KAAY;AAClCF,EAAAA,OAAO,EAAEE,KAAK,CAACF;AADmB,CAAZ,CAAxB;;AAIA,MAAMoB,kBAAkB,GAAG;AACzB1C,EAAAA;AADyB,CAA3B;AAIA,eAAeD,OAAO,CAAC0C,eAAD,EAAkBC,kBAAlB,CAAP,CAA6ChC,UAA7C,CAAf","sourcesContent":["import React, { useState } from 'react';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Card from 'react-bootstrap/Card';\r\nimport { Typeahead } from 'react-bootstrap-typeahead'; \r\nimport { connect } from 'react-redux';\r\nimport './search-form.css';\r\nimport 'react-bootstrap-typeahead/css/Typeahead.css';\r\nimport { findFlights } from './../../actions';\r\n\r\nconst airports = [\r\n  'Pune (PNQ)',\r\n  'Delhi (DEL)',\r\n  'Bengaluru (BLR)',\r\n  'Mumbai (BOM)'\r\n];\r\n\r\nconst isDate = (date) => {\r\n  return (new Date(date) !== \"Invalid Date\") && !isNaN(new Date(date));\r\n}\r\n\r\nconst ErrorLabel = (props) => {\r\n  return (<label style={{color: 'red'}}>{props.message}</label>)\r\n}\r\n\r\nexport const SearchForm = (props) => {\r\n  let origin, destination;\r\n  const [isReturn, setFlightType] = useState(false);\r\n  const [status, setFormValid] = useState({ isValid: false });\r\n  let invalidFields = {};\r\n  //const isReturn = true;\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    const {flights} = props;\r\n    invalidFields = {};\r\n    const criteria = {\r\n      origin: origin.state.text,\r\n      destination: destination.state.text,\r\n      departureDate: event.target.dateOfDep.value,\r\n      numOfPassengers: event.target.numOfPassengers.value\r\n    }\r\n\r\n    if (event.target.flightType[1].checked ) {\r\n      criteria.returnDate = event.target.dateOfReturn.value;\r\n      if (!isDate(event.target.dateOfReturn.value)) {\r\n        invalidFields.returnDate = true;\r\n      }\r\n    }\r\n\r\n    if (!airports.includes(criteria.origin)) {\r\n      invalidFields.origin = true;\r\n    }\r\n    if (!airports.includes(criteria.destination) || criteria.origin === criteria.destination) {\r\n      invalidFields.destination = true;\r\n    }\r\n    if(!isDate(criteria.departureDate)) {\r\n      invalidFields.departureDate = true;\r\n    }\r\n    if(!isDate(criteria.departureDate)) {\r\n      invalidFields.departureDate = true;\r\n    }\r\n    if(Object.keys(invalidFields).length > 0) {\r\n      setFormValid({isValid: false, ...invalidFields});\r\n      return;\r\n    }\r\n    \r\n    setFormValid({isValid: true});\r\n    props.findFlights({flights, criteria});\r\n  }\r\n\r\n  return (\r\n    <Card>\r\n      <Card.Body>\r\n      <Form className=\"search-form-container\" onSubmit={handleSubmit}>\r\n        <Form.Group >\r\n          <Form.Check\r\n            inline\r\n            checked={!isReturn}\r\n            type=\"button\"\r\n            label=\"One way\"\r\n            name=\"flightType\"\r\n            id=\"formHorizontalRadios1\"\r\n            onChange={(e)=>setFlightType(false)}\r\n          />\r\n          <Form.Check\r\n            inline\r\n            checked={isReturn}\r\n            type=\"button\"\r\n            label=\"Return\"\r\n            name=\"flightType\"\r\n            id=\"formHorizontalRadios2\"\r\n            onChange={(e)=>setFlightType(true)}\r\n          />\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId=\"formGridOrigin\">\r\n          <Typeahead\r\n            labelKey=\"origin\"\r\n            options={airports}\r\n            placeholder=\"Enter Origin\"\r\n            ref={(ref) => origin = ref}\r\n          />\r\n          {status.origin && <ErrorLabel message=\"Please enter a valid airport\"></ErrorLabel>}\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId=\"formGridDestination\">\r\n          <Typeahead\r\n            labelKey=\"destination\"\r\n            options={airports}\r\n            placeholder=\"Enter Destination\"\r\n            ref={(ref) => destination = ref}\r\n          />\r\n          {status.destination && <ErrorLabel message=\"Please enter a valid airport but not same as origin\"></ErrorLabel>}\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId=\"formGridDateOfDep\">\r\n          <Form.Label>Departure Date</Form.Label>\r\n          <Form.Control type=\"date\" name=\"dateOfDep\" placeholder=\"yyyy-mm-dd\" required />\r\n          {status.departureDate && <ErrorLabel message=\"Please enter a valid departure date\"></ErrorLabel>}\r\n        </Form.Group>\r\n\r\n        {isReturn && <Form.Group controlId=\"formGridDateOfReturn\">\r\n          <Form.Label>Return Date</Form.Label>\r\n          <Form.Control type=\"date\" name=\"dateOfReturn\"  placeholder=\"yyyy-mm-dd\" required />\r\n          {status.returnDate && <ErrorLabel message=\"Please enter a valid return date\"></ErrorLabel>}\r\n        </Form.Group>}\r\n\r\n        <Form.Group controlId=\"exampleForm.ControlSelect1\">\r\n          <Form.Control as=\"select\" name=\"numOfPassengers\" placeholder=\"Number of Passengers\">\r\n            <option>Number of Passengers</option>\r\n            <option>1</option>\r\n            <option>2</option>\r\n            <option>3</option>\r\n            <option>4</option>\r\n            <option>5</option>\r\n          </Form.Control>\r\n        </Form.Group>\r\n\r\n        <Button variant=\"primary\" type=\"submit\">\r\n          Search\r\n        </Button>\r\n        </Form> \r\n      </Card.Body>\r\n    </Card>\r\n     \r\n  )\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  flights: state.flights\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n  findFlights\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SearchForm);\r\n\r\n"]},"metadata":{},"sourceType":"module"}